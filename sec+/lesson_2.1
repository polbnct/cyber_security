Man in the Middle;
- Threat actor watching traffic being a middleman
- Redirects your traffic, you neeve know your traffic was redirected
- ARP poisoning (ARP has no security)

Man in the Browser;
- The calls are coming from inside the browser
- Malware/Trojan does all of the proxy work
- Relatively easy to proxy encrypted traffic
--------------------------------------------------------
Buffer Overflows; 
- Overwriting a buffer of memory
-- Spills over into other memory areas
-- Developers need ot perform bounds checking

- Extending past 8bits, and dumping the allocated memory
--------------------------------------------------------
Code Injection;
- Adding your own information into a data stream
- Badly programm submission or without sanitization
- Many different data types: HTML, SQL, XML, LDAP, etc

-> Structured Query Language: Most common relational database management system language

-> SQL Injection;
-- Modifying SQL requests

-> Extensible Markup Language
-- A set of rules for data transfer and storage
-- Modifying XML requests - a good applicaiton will validate

-> Lightweight Directory Access Protocol
-- Create by the telephone companies
-> LDAP Injection
-- Modify LDAP requeset to manipulate application results
-------------------------------------------------------------
-> Cross-site Scripting
-- XSS 
-- Informatio nfrom one site could be shared with another
-- Takes advantage of the trust a user has for a site
-- Malware that uses JavaScript

-> Non-persistent (reflected) XSS attack
-- Web site allow script to run in user input
- Search box is the common source
-- Threat actor emails a link that takes advantage of this vulnerability
-- Script embedded in URL executes in the victim's browser

-> Persistent (Stored) XSS attack
-- Threat actor posts a message to a social network; includes the malicious payload
-- Everyone gets the payload (Persistent)
- No Specific target
- For social networking, can spread quickly

- Protecting Against XSS
-- Be careful when clicking untrusted links
-- Consider disabling JavaScript
-- Keep your browser and application updated
If Developer;
- Validate or Sanitize the input
-------------------------------------------------------------
-> Cros-site request forgery
- One click attack, session riding
- Takes advantage of the trust that a web application has for the user
-------------------------------------------------------------
-> Priviledge Escalation
- Gain higher-level access to a system
-- Exploit a vulnerability 
-- Might be a bug or design flaw
-- Higher-leve access means more capabilities
-- High priority vulnerability patches`

- Mitigating Priviledge Escalation
-- Patch Quickly; Fix the vulnerability
-- Updated anti-virus/anti-malware software
-- Data Execution Prevention; Only data in executable areas can run

-- Address space layout randomization; prevent a buffer overrun at a known memory address
--------------------------------------------------------------

-> DNS Poisoning

- Modify the DNS Server (Crafty Hacking)
- Modify the client host file
- Send a fake response to a valid DNS request

-> Domain Hijacking
- Ge access to the domain registration, and you have control where the traffic flows
-- Don't have to touch the actual servers
-- Determines the DNS names and DNS IP Address

Ways to do it;
- Brute Force attack
- Social Engineer the Password
- Gain access to the email address that manages the account
---------------------------------------------------------------

-> Zero-day Attacks
- Vulnerabilities to an Application or Operating system
- Someone is working hard ot find the next big vulnerability
- Exploits the vulnerability
- Increasingly being more common
---------------------------------------------------------------
-> Replay attacks
- Useful infromation is transmitted over the network
- Need access to the raw network data (Network tap, ARP poisoning, malware on the victim)
- The gathered information may help the bad guy

---------------------------------------------------------------
-> URL hiacking
- Make money from your mistake
- Sell the badly spelled doomain to the actual owner
- Redirect to a competitor
- Phishing site
- Infect with a drive-by download

Ways;
- Typosquatting / brandjacking (take advantage of poor selling)
- Outright misspelling
- Typing error
- Different phrase
- Different top-level domain

-> Clickjacking
- You're clicking on a button (but you're actually clicking on something else)
- Normal web page underneath (Invisible layer on the top)
- Mostly used in Mobile Devices

-> Mobile attack
- Cloak & Dagger
- Invisible information drawn over the screen and monitor keystrokes to record user input

-> Browser cookies and sessions IDs
- Cookies;
-- Information stored on your computer by the browser
-- Used for tracking, personalization, session management
-- Could be considered be a privacy risk
-- Session IDs are often storede in the cookies

-> Session hijacking (Sidejacking)
-- Someone getting access to a service without authenticating to the service

Header manipulation;
- Information gathering - wireshark, Kismet
- Exploits - Cross-site scripting
- Modify headers - Tamper, Firesheep, Scapy
- Modify cookies - Cookies Manager + (Firefox add-on)

Prevention;
- Encrypt end-to-end
-- They can't capture your session ID if they can't see it
-- Additional load on the web server (HTTPS)
-- Firefox extension: HTTPS Everywhere, Force-TLS
-- Many sites are moving to HTTPS-only

- Encrypt end-to-somewhere
-- At least avoid capture over a local wireless network
-- Still in-the-clear for part of the journey
-- Personal VPN (OpenVPN, VyprVPN, etc)

- Use session ID Monitors;
-- Blacksheep, Application-specific monitors

---------------------------------------------------------

- Traditional anti-virus is very good at identifying known attacks
-- Checks the signature
-- Block anything that matches

- There are still ways to infect and hide
-- Zero-day attacks, new attack types, etc.

Drivers - ways to backup your files

- The interaction between the hardware and your operating system
-- They are often trusted
-- Great opportunity for security issues

- Hardware interactions contain sensitive information
-- Video, Keyboard, Mouse
 
-> Shimming;
- Filling in the space between two objects (Middleman)
Ex. 
- Windows compatibility mode or Application Compatibility Shim Cache

-> Refactoring;
- Metamorphic Malware
-- Differnet program each time it's downloaded
- Make it appear different each time
-- Add NOP instruction
-- Loops, pointless code strings

- Can intelligently redesign itself
-- Reorder functions
-- Modify the application flows
-- Reorder ode and insert unused data types

- Difficult to match with signature-based detection
-- Use always a layered approach
------------------------------------------------------------

-> Spoofing
- Pretending to be something you aren't 
(Fake web server, Fake DNS server, etc.)
- Email Address Spoofing
-- The sending address of an email isn't really the sender
- Caller ID Spoofing
-- Incoming call information is completely fake
- Man-in-the-middle attacks

-> Media Access Control (Mac) - Spoofing

- Ethernet device has a MAC address
- Changing the MAC address can be legitimate
- Circumvent MAC-based ACLs
- Fake-out a wireless address filter

-> IP address - Spoofing

- Take someone else's IP Address
-- Pretend to be somewhere you are not

- Can be legitimate
-- Load Balancing
-- Load Testing

- May not be legitimate
-- ARP poisoning
-- DNS amplification / DDoS

------------------------------------------------------
-> Replay Attack
- Similar to a wired replay attacks
- Wireless adds some additional capabilities
- Much easier to capture data

-> Cracking WEP
- A broken security protocol
- Could not stop the replay of 802.11 packets

- ARP request replay attack
-- Cracking WEP requires thousands of Initialization Vector (IV)packets
-- Or replay a ton of ARPs and collect the IV packets
-- Allowing you to cract WEP in seconds

------------------------------------------------------
-> Spam
- Unsolicited messages
-- Email, Forum, etc.
-- Spam over Instant Messaging (SPIM)

- Various Content
-- Commercial advertising
-- Non-commercial proselytizing
-- Phishing attempts

- Significant Technology Issue
-- Security concerns, resource utilization, storage costs, managing the spam

-> Preventing Spam

- Mail Gateway
-- Stop it at the gateway before it reaches the user
-- On-site or cloud-based
-- Allowed list (Only receive email from trusted senders)

- SMTP Standards checking
-- (Block anything that doesn't follow RFC Standards)

- rDNS 
-- Reverse DNS (Block email where the sender's domain doesn't match the IP address)
k

- Tarpitting
-- Intentionally slow down the server conversation

- Recipient Filtering
-- Block all email not addressed to a valid recipient email address

-------------------------------------------------------------
-> Influence Campaigns

-> Hacking Public Opinion
- Influence Campaigns 
-- Sway public opinion on political and social issues

- Nation-state actors
-- Divide, Distract, and Persuade

- Advertising is an option
-- Buy a voice for your opinion

- Enabled through Social Media
-- Creating, Sharing, Liking
-- Amplification

-> Hybrid Welfare
- Military strategy
-- A broad description of the techniques
-- Wage war non-traditionally

- Not a new concept
-- The Internet adds new methods

- Cyberwarfare
-- Attack an entity with technology

- Influence with a military spin
-- Influence foreign elections (Fake News)
-----------------------------------------------------------
-> Other Social Engineering Attacks

-> Invoice Scams
- Starts with a bit of spear phishing
-- Atacker know who pays the bills

- Attacker sends a fake invoice
-- Domain renewal, toner cartridges, etc.
-- From:address is a spoofed version of the CEO

- Accounting pays the invoice
-- It was from the CEO, after all

-> Credential Harvesting
- Also called password harvesting
-- Attackers collec login credentials

- There are a lot of stored credentials on your computer
-- Chrome, Firefox, Outlook, Windows Credential Manager, etc.

- User receives an email with a malicious Microsoft Word doc
-- Opening the document runs a macro downloads credential harvesting malware

----------------------------------------------------------
-> Password Attacks
- Plaintext / Unencrypted Passwords
-- No encryption, you can read the stored password
-- Rare

How should you store Password?

- Hashing a password
-- Hashes represent data as a fixed-length string of text
(Message Digest or Fingerprint)

- Will not have a collision in the system 
-- Different inputs will not have the same hash

- One-way trip
-- Impossible to recover the original message from the digest
-- Common way to store passwords

-> Salting
- A random data added to a password when hashing
- Every users get their own random salt (commonly stored with the pasword)
- Rainbow tables won't work with salted hashes (additional random value added to the original password)
- Slow things down in hte brute force process

Attacks;
-> Spraying attacks
- Try to login with an incorrect password
- Usees some common passwords

-> Brute force Attack;
- Try every possible password combination until the a hash is matched
- Might take some time (A strong hashing algorithm slows things down)

- Brute Force Attack - Online
-- Keep trying the login process
-- Very slow
-- Most accounts will lockout after a number of failed attempts

- Brute Force the Hash - Offline
-- Obtain the list of users and hashes
-- Calculate a password hash, Compare it to a stored hash
-- Larger computational resources requirement

-> Dictionary attack
- Use a dictionary to find common words
- Many common wordlist available on the net (Some are customized by language or line of work)
- The password crackers can substitute letters
- Takes time - Distributed cracking and GPU cracking is common

Database;
-> Rainbow Tables
- An optimized, pre-built set of hashes
-- Saves time and storage space
-- Doesn't need to contain every hash
-- Contains pre-calculated hash chain

- Remarkable speed Increase
-- Especially with longer passwords

- Need different tables for different hashing methods









